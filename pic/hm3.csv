Complexity metrics,ÖÜÁù, 27 3ÔÂ 2021 16:03:33 CST
Method,CogC,ev(G),iv(G),v(G)
"Constant.Constant(BigInteger)",0,1,1,1
"Constant.diff()",0,1,1,1
"Constant.getNumber()",0,1,1,1
"Constant.setNumber(BigInteger)",0,1,1,1
"Constant.toString()",0,1,1,1
"ExprFactor.ExprFactor(ExprNode,boolean)",0,1,1,1
"ExprFactor.diff()",0,1,1,1
"ExprFactor.getExprNode()",0,1,1,1
"ExprFactor.getNeg()",0,1,1,1
"ExprFactor.setNeg(boolean)",0,1,1,1
"ExprFactor.toString()",0,1,1,1
"ExprNode.ExprNode()",0,1,1,1
"ExprNode.ExprNode(Item)",0,1,1,1
"ExprNode.addItem(Item)",0,1,1,1
"ExprNode.diff()",4,1,3,3
"ExprNode.getItemList()",0,1,1,1
"ExprNode.mergeItems()",9,4,4,5
"ExprNode.simplify()",1,1,2,2
"ExprNode.toString()",15,1,4,7
"Expression.Expression(String)",1,2,1,2
"Expression.diff()",1,2,1,2
"Expression.getConstant(int,int)",3,1,3,4
"Expression.getExprFactor(int)",28,8,7,13
"Expression.getExpression()",26,7,6,11
"Expression.getFactor(int)",14,7,7,10
"Expression.getItem(int)",19,5,11,11
"Expression.getNumber(int)",10,4,6,8
"Expression.getPowerFun(int,int)",7,3,3,5
"Expression.getTriFun(int,int)",15,7,5,10
"Expression.getWhite()",9,4,4,5
"Expression.setPos(int)",0,1,1,1
"Expression.toString()",0,1,1,1
"FactorFather.diff()",0,1,1,1
"FactorFather.getFuntype()",0,1,1,1
"FactorFather.getNeg()",0,1,1,1
"FactorFather.getNumber()",0,1,1,1
"FactorFather.getPow()",0,1,1,1
"FactorFather.setFuntype(String)",0,1,1,1
"FactorFather.setNeg(boolean)",0,1,1,1
"FactorFather.setNumber(BigInteger)",0,1,1,1
"FactorFather.setPow(BigInteger)",0,1,1,1
"Item.Item(ArrayList<Factor>)",0,1,1,1
"Item.Item(Factor)",0,1,1,1
"Item.addFactor(Factor)",0,1,1,1
"Item.diff()",43,2,9,15
"Item.equals(Object)",3,4,2,4
"Item.getFactorList()",0,1,1,1
"Item.merge(Item)",19,5,6,8
"Item.simpNewList(ArrayList<Factor>,boolean)",3,2,3,4
"Item.simplify()",9,3,5,6
"Item.toString()",15,3,5,8
"Main.main(String[])",5,1,4,4
"PowerFun.PowerFun(BigInteger,boolean)",0,1,1,1
"PowerFun.diff()",25,13,11,13
"PowerFun.getNeg()",0,1,1,1
"PowerFun.getPow()",0,1,1,1
"PowerFun.setNeg(boolean)",0,1,1,1
"PowerFun.setPow(BigInteger)",0,1,1,1
"PowerFun.toString()",14,6,4,6
"TriFun.TriFun(String,BigInteger,boolean,Factor)",0,1,1,1
"TriFun.diff()",2,2,2,2
"TriFun.getCosDiff(String,String,BigInteger)",20,6,7,11
"TriFun.getFuntype()",0,1,1,1
"TriFun.getNeg()",0,1,1,1
"TriFun.getPow()",0,1,1,1
"TriFun.getSinDiff(String,String,BigInteger)",13,5,6,9
"TriFun.setFuntype(String)",0,1,1,1
"TriFun.setNeg(boolean)",0,1,1,1
"TriFun.setPow(BigInteger)",0,1,1,1
"TriFun.toString()",28,6,4,12
"WFexception.WFexception()",0,1,1,1
"WFjudge.WFjudge(String)",3,3,2,3
"WFjudge.getJudge()",0,1,1,1
"WFjudge.isRightChar(char)",5,1,1,15

Class,OCavg,OCmax,WMC
"Constant",1.00,1,5
"ExprFactor",1.00,1,6
"ExprNode",2.62,7,21
"Expression",5.31,11,69
"FactorFather",1.00,1,9
"Item",4.70,13,47
"Main",2.00,2,2
"PowerFun",3.43,13,24
"TriFun",3.73,12,41
"WFexception",1.00,1,1
"WFjudge",1.67,3,5

Package,v(G)avg,v(G)tot
"",3.54,262

Module,v(G)avg,v(G)tot
"homework3",3.54,262

Project,v(G)avg,v(G)tot
"project",3.54,262

